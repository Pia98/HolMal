package com.holmal.app.holmal.utils;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.v7.widget.CardView;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;
import com.holmal.app.holmal.R;
import com.holmal.app.holmal.model.ShoppingList;
import java.util.HashMap;


//this class is responsible for displaying the lists in the list overview
public class ShoppingListsAdapter extends RecyclerView.Adapter<ShoppingListsAdapter.ListsViewHolder>{

    private Context context;
    private HashMap<String, ShoppingList> shoppinglists;
    private String[] listKeys;
    private String openItems = " offene Items";

    private TextView nameView;
    private TextView categoryView;
    private TextView descriptionView;
    private RecyclerView singleShoppingListView;
    private CardView cardView;

    /**
     * Provide a reference to the views for each data item
     */
    public static class ListsViewHolder extends RecyclerView.ViewHolder {
        private View gridView;
        private ListsViewHolder(View view) {
            super(view);
            gridView = view;
        }
    }

    //constructor
    public ShoppingListsAdapter(Context context, HashMap<String, ShoppingList> shoppinglists) {
        this.context = context;
        this.shoppinglists = shoppinglists;
        listKeys = shoppinglists.keySet().toArray(new String[shoppinglists.size()]);
    }

    @NonNull
    @Override
    public ShoppingListsAdapter.ListsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int i) {

        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View gridView = inflater.inflate(R.layout.single_shoppinglist_layout, parent, false);

        nameView = (TextView) gridView.findViewById(R.id.nameOfList);
        categoryView = (TextView) gridView.findViewById(R.id.categoryOfList);
        descriptionView = (TextView) gridView.findViewById(R.id.amountItemsOnList);
        //cardView = (CardView) gridView.findViewById(R.id.card_view);

        ListsViewHolder viewHolder = new ListsViewHolder(gridView);
        return viewHolder;
    }

    @Override
    public void onBindViewHolder(@NonNull ShoppingListsAdapter.ListsViewHolder listsViewHolder, int i) {

        ShoppingList listAtPosition = shoppinglists.get(listKeys[i]);

        nameView.setText(listAtPosition.getListName());

        categoryView.setText(listAtPosition.getCategory());

        if (listAtPosition.getItemsOfThisList() == null
                || listAtPosition.getItemsOfThisList().size() == 0) {
            descriptionView.setText(R.string.noOpenItems);
        } else {
            descriptionView.setText(R.string.openItems);
            descriptionView.append(String.valueOf(listAtPosition.getItemsOfThisList().size()));
        }

    }

    //only autogenerated
    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public int getItemCount() {
        return shoppinglists.size();
    }


}
